%YAML:1.0

# Camera Parameters. Adjust them!
camera.rows: 480
camera.cols: 640

## ahanda settings
# # Camera calibration parameters (OpenCV) 
# Camera.fx: 481.20
# Camera.fy: 480.00
# Camera.cx: 319.5 # 800.7
# Camera.cy: 239.5 # 719.5

# # Camera distortion paremeters (OpenCV)
# Camera.k1: 0.0
# Camera.k2: 0.0
# Camera.p1: 0.0
# Camera.p2: 0.0

# # Camera frames per second 
# Camera.fps: 20.0

# Camera calibration parameters (OpenCV) 
camera.fx: 516.694592 #508.353158
camera.fy: 516.865044 #510.167196
camera.cx: 322.716301 #311.288297
camera.cy: 245.584421 #235.728826

# Camera distortion parameters (OpenCV)
camera.k1: 0.077913  #0.043922
camera.k2: -0.080010 #-0.016877
camera.p1: 0.002905  #0.002922
camera.p2: 0.001602  #-0.005741

# Camera frames per second 
camera.fps: 1

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
camera.RGB: 0

#-----------------------------------------------------------------------------------------------
## It is recommended to use dynamic_reconfigure instead of changing the parameters in this file, to tune the performance of the openDTAM system.
## rosrun rqt_reconfigure rqt_reconfigure

# Cost Volume properties
costvolume.images_per_costvolume : 30
costvolume.layers                : 64
costvolume.near_inverse_distance : 10 # change to .002 or slightly larger
costvolume.far_inverse_distance  : 0.1 # 0.0 

# Regulariser parameters
# G parameters
# set from Fig. 4.11 in Dense Visual SLAM thesis
regulariser.alpha_G : 100.0
regulariser.beta_G  : 1.6 

# Optimizer parameters
optimizer.theta_start  :  0.2
optimizer.theta_min    :  1.0e-4
optimizer.theta_step   :  0.97
optimizer.epsilon      :  0.00147 # huber epsilon from pg 103 of thesis
optimizer.lambda       :  0.80    # regularizing strength # TODO needs to be dynamically altered
optimizer.n_iters      : 10       # number of interleaving optimizer iters to use 
